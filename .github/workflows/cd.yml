name: ci

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches: ['main']

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push to Prod
        if: github.ref_name == 'main'
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
      # - name : Build and push to Dev
      #   if : github.ref_name == 'dev'
      #   uses : docker/build-push-action@v3
      #   with :
      #     context : .
      #     file : ./Dockerfile
      #     push : true
      #     tags : ${{ secrets.DOCKER_USER }}/${{ github.event.repository.name }}:dev
      # - name : Alert
      #   uses: appleboy/telegram-action@master
      #   with :
      #     to : ${{ secrets.TELEGRAM_TO }}
      #     token : ${{ secrets.TELEGRAM_TOKEN }}
      #     message : |
      #       Full Name: ${{ github.event.head_commit.author.name }}
      #       Username: ${{ github.actor }}
      #       Commit message: ${{ github.event.commits[0].message }}
      #       Repository: ${{ github.repository }}
      #       Branch: ${{ github.ref_name }}
      #       Status: ${{ job.status }}
      #       See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.HOST_PASSWORD }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/podarki-uz-backend:latest
            docker stop podarki-uz-backend || true
            docker rm podarki-uz-backend || true
            docker run -d -p 3001:3001 --name podarki-uz-backend ${{ secrets.DOCKER_USERNAME }}/podarki-uz-backend:latest
